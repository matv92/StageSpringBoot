server.port=8761
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.instance.hostname=localhost
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#eureka.client.serviceUrl.defaultZone=http://${security.user.name}:${security.user.password}@localhost:8181/eureka/
#security.user.name=test
#security.user.password=test
spring.application.name= eureka-server

# If you don't set this, username 'user' will be used by default
# And a password will be auto-generated each time your app starts
# Such password is visible in the console during app startup
spring.security.user.name=admin
spring.security.user.password=admin
# Provide username and password for Spring Boot Admin Server to connect to the client
spring.boot.admin.client.instance.metadata.user.name=admin
spring.boot.admin.client.instance.metadata.user.password=admin
# Credentials to authenticate with the Admin Server
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin-password

#configs to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

## Spring admin client
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.boot.admin.client.url=http://localhost:8084

