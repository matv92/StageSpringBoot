server.port=8762
spring.application.name=gateway-service

#Eureka properties
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.client.register-with-eureka= true
eureka.client.fetch-registry= true
eureka.client.fetchRegistry=true

# A prefix that can added to beginning of all requests. 
#zuul.prefix=/api

# Disable accessing services using service name (i.e. gallery-service).
# They should be only accessed through the path defined below.
# Link: https://stackoverflow.com/questions/46317388/zuul-service-name-exposed-instead-of-route-path-only
zuul.ignored-services=*

# Map paths to services
zuul.routes.napier-service.path=/napier/**
#zuul.routes.napier-service.service-id=http://localhost:8082/
zuul.routes.napier-service.service-id=napier-service


# Map path to auth service
zuul.routes.auth-service.path=/authenticate/**
zuul.routes.auth-service.service-id=authentication-service

# By default, all requests to gallery service for example will start with: "/gallery/"
# What will be sent to the gallery service is what comes after the path defined, 
# So, if request is "/gallery/view/1", gallery service will get "/view/1".
# In case of auth, we need to pass the "/auth/" in the path to auth service. So, set strip-prefix to false
zuul.routes.auth-service.strip-prefix=false

# Exclude authorization from sensitive headers
zuul.routes.auth-service.sensitive-headers=Cookie,Set-Cookie 


# If you don't set this, username 'user' will be used by default
# And a password will be auto-generated each time your app starts
# Such password is visible in the console during app startup
spring.security.user.name=admin
spring.security.user.password=admin
# Provide username and password for Spring Boot Admin Server to connect to the client
spring.boot.admin.client.instance.metadata.user.name=admin
spring.boot.admin.client.instance.metadata.user.password=admin
# Credentials to authenticate with the Admin Server
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin-password

#configs to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

## Spring admin client
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.boot.admin.client.url=http://localhost:8084
